#!/usr/bin/env bash
SOURCE_NIX="source $ENVSDIR/.nix-profile/etc/profile.d/nix.sh"
${SOURCE_NIX}
rsync -a $HOME_TEMPLATE/ $HOME
grep -q -F "${SOURCE_NIX}" $HOME/.bashrc || printf "\n$SOURCE_NIX\n" >> $HOME/.bashrc
PS1_MOD='export PS1='\''\u@\h-DevContainer:\w\n\$ '\'''
eval $PS1_MOD
grep -q -F "${PS1_MOD}" $HOME/.bashrc || printf "\n$PS1_MOD\n" >> $HOME/.bashrc
touch $HOME/.stignore && \
grep -q -F '#include .home_sync_ignore' $HOME/.stignore || echo '#include .home_sync_ignore' >> $HOME/.stignore

SET_DYNAMIC_ENV="source $HOME/workspace/docker-nix-intellij/nix-env-dynamic.sh"
eval $SET_DYNAMIC_ENV
grep -q -F "${SET_DYNAMIC_ENV}" $HOME/.bashrc || printf "\n$SET_DYNAMIC_ENV\n" >> $HOME/.bashrc

read -r -d '' ACME_CD_PATCH <<- 'EOM'
## ***ACME_CD_PATCH***
## If inside Acme...
if [ "$winid" ]; then
  ## ... then patch the `cd` command
  _cd () {
    \cd "$@" && awd
  }
  alias cd=_cd

  ## Customize a prompt inside Acme
  export PS1='$ '
fi
EOM
eval $ACME_CD_PATCH
grep -q -F "ACME_CD_PATCH" $HOME/.bashrc || printf "\n$ACME_CD_PATCH\n" >> $HOME/.bashrc

mkdir -p "$HOME/.config/fontconfig"
cat > "$HOME/.config/fontconfig/fonts.conf" <<-EOF
<?xml version="1.0"?>
<!DOCTYPE fontconfig SYSTEM "fonts.dtd">
<fontconfig>
  <dir>~/.nix-profile/share/fonts</dir>
</fontconfig>
EOF
fc-cache -f -v

touch /tmp/syncthing.
log
mv -b /tmp/syncthing.log /tmp/syncthing.log.1
syncthing -gui-address 0.0.0.0:8384 2>&1 > /tmp/syncthing.log &
cd $HOME
emacs -nw

